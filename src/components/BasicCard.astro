---
import "../styles/BasicCard.css";
import { Image } from "astro:assets";

const { entry, isSaga, linkType } = Astro.props;

function getImage(key, isSaga) {
  const imageSrc = `${isSaga ? "sagas" : "stories"}/${key}.png`;
  return `/assets/${imageSrc}`;
}

const linkTo = isSaga ? `/saga/${entry.key}` : `/cuento/${entry.key}`;
const imageSrc = getImage(entry.key, isSaga);

// Dimensiones de las imágenes (ajusta según las dimensiones reales)
const imageDimensions = {
  width: 512,
  height: 512,
};
---

<a href={linkTo} class="basic-card-link">
  <div class="basic-card">
    <div class="basic-image">
      <img
        data-key={entry.key}
        data-src={imageSrc}
        alt={"Enlace a " + entry.name}
        width={imageDimensions.width}
        height={imageDimensions.height}
        class="lazy"
      />
      <div class="basic-info">
        <h3>{entry.name}</h3>
      </div>
      {
        entry.time && (
          <span class="basic-time">
            {Math.ceil(parseInt(entry.time) / 60)} min
          </span>
        )
      }
    </div>
  </div>
</a>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const lazyImages = document.querySelectorAll(".lazy");
    const observer = new IntersectionObserver(
      (entries, observer) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const img = entry.target;
            img.src = img.dataset.src;
            img.classList.add("visible");
            observer.unobserve(img);
          }
        });
      },
      { threshold: 0.1 }
    );

    lazyImages.forEach((image) => {
      observer.observe(image);
    });
  });
</script>
